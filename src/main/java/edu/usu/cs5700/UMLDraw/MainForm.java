package edu.usu.cs5700.UMLDraw;

import java.awt.Color;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;

import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JToggleButton;
import javax.swing.Timer;
import javax.swing.filechooser.FileNameExtensionFilter;

import edu.usu.cs5700.AppLayer.Command.CommandFactory;
import edu.usu.cs5700.AppLayer.Command.Invoker;
import edu.usu.cs5700.AppLayer.DrawingComponents.Canvas;
import edu.usu.cs5700.AppLayer.DrawingComponents.Relationships.ArrowFactory;

/**
 *
 * @author nino
 */
public class MainForm extends javax.swing.JFrame {
    private static final long serialVersionUID = 1L;
    public final static int INTERVAL = 40;

    Timer timer = new Timer(INTERVAL, new ActionListener() {
        public void actionPerformed(ActionEvent evt) {

            //Refresh the panel
            drawingPanel.repaint();

            if (drawingPanel == null) {
                timer.stop();
            }
        }
    });

    //private final Drawing drawing;
    //private boolean forceRedraw;
    private final Invoker invoker = new Invoker();
    private String selectedShape;
    
    private Color backgroundColor = Color.WHITE;
    private Color foregroundColor = Color.BLACK;


    private Point startPoint;
    private Point endPoint;
    private final ArrowFactory shapeFactory = ArrowFactory.getInstance();
        
    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();

        CommandFactory.getInstance().invoker = invoker;

        drawingPanel.setFocusable(true);
        drawingPanel.requestFocusInWindow();

        timer.start();
        invoker.Start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MenuButtons = new javax.swing.ButtonGroup();
        DrawingToolsButtons = new javax.swing.ButtonGroup();
        buttonMenuPanel = new javax.swing.JPanel();
        newFileButton = new javax.swing.JButton();
        saveFileButton = new javax.swing.JButton();
        openFileButton = new javax.swing.JButton();
        undoButton = new javax.swing.JButton();
        redoButton = new javax.swing.JButton();
        trashButton = new javax.swing.JButton();
        fileName = new javax.swing.JTextField();
        toolBarPanel = new javax.swing.JPanel();
        backgroundColorChooserPanel = new javax.swing.JPanel();
        foregroundColorChooserPanel = new javax.swing.JPanel();
        colorChooserLabel = new javax.swing.JLabel();
        moveButton = new javax.swing.JToggleButton();
        associationButton = new javax.swing.JToggleButton();
        dependency = new javax.swing.JToggleButton();
        generalization = new javax.swing.JToggleButton();
        composition = new javax.swing.JToggleButton();
        aggregation = new javax.swing.JToggleButton();
        UMLClass = new javax.swing.JToggleButton();
        colorChooserLabel1 = new javax.swing.JLabel();
        drawingPanel = new Canvas();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        buttonMenuPanel.setBackground(new java.awt.Color(102, 102, 102));

        newFileButton.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        newFileButton.setForeground(new java.awt.Color(204, 204, 204));
        newFileButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/usu/cs5700/UMLDraw/Graphics/newfile.png"))); // NOI18N
        newFileButton.setText("New File");
        newFileButton.setBorderPainted(false);
        MenuButtons.add(newFileButton);
        newFileButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newFileButton.setMaximumSize(new java.awt.Dimension(64, 64));
        newFileButton.setMinimumSize(new java.awt.Dimension(64, 64));
        newFileButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        newFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newFileButtonActionPerformed(evt);
            }
        });

        saveFileButton.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        saveFileButton.setForeground(new java.awt.Color(204, 204, 204));
        saveFileButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/usu/cs5700/UMLDraw/Graphics/save.png"))); // NOI18N
        saveFileButton.setText("Save");
        saveFileButton.setBorderPainted(false);
        MenuButtons.add(saveFileButton);
        saveFileButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        saveFileButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        saveFileButton.setMaximumSize(new java.awt.Dimension(64, 64));
        saveFileButton.setMinimumSize(new java.awt.Dimension(64, 64));
        saveFileButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        saveFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveFileButtonActionPerformed(evt);
            }
        });

        openFileButton.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        openFileButton.setForeground(new java.awt.Color(204, 204, 204));
        openFileButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/usu/cs5700/UMLDraw/Graphics/openfile.png"))); // NOI18N
        openFileButton.setText("Open File");
        openFileButton.setBorderPainted(false);
        MenuButtons.add(openFileButton);
        openFileButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        openFileButton.setMaximumSize(new java.awt.Dimension(64, 64));
        openFileButton.setMinimumSize(new java.awt.Dimension(64, 64));
        openFileButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        openFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFile(evt);
            }
        });

        undoButton.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        undoButton.setForeground(new java.awt.Color(204, 204, 204));
        undoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/usu/cs5700/UMLDraw/Graphics/undo.png"))); // NOI18N
        undoButton.setText("Undo");
        undoButton.setBorderPainted(false);
        MenuButtons.add(undoButton);
        undoButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        undoButton.setMaximumSize(new java.awt.Dimension(64, 64));
        undoButton.setMinimumSize(new java.awt.Dimension(64, 64));
        undoButton.setPreferredSize(new java.awt.Dimension(64, 64));
        undoButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        undoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undoButtonActionPerformed(evt);
            }
        });

        redoButton.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        redoButton.setForeground(new java.awt.Color(204, 204, 204));
        redoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/usu/cs5700/UMLDraw/Graphics/redo.png"))); // NOI18N
        redoButton.setText("Redo");
        redoButton.setBorderPainted(false);
        MenuButtons.add(redoButton);
        redoButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        redoButton.setMaximumSize(new java.awt.Dimension(64, 64));
        redoButton.setMinimumSize(new java.awt.Dimension(64, 64));
        redoButton.setPreferredSize(new java.awt.Dimension(64, 64));
        redoButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        redoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redoButtonActionPerformed(evt);
            }
        });

        trashButton.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        trashButton.setForeground(new java.awt.Color(204, 204, 204));
        trashButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/usu/cs5700/UMLDraw/Graphics/trash.png"))); // NOI18N
        trashButton.setText("Delete");
        trashButton.setBorderPainted(false);
        MenuButtons.add(trashButton);
        trashButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        trashButton.setMaximumSize(new java.awt.Dimension(64, 64));
        trashButton.setMinimumSize(new java.awt.Dimension(64, 64));
        trashButton.setPreferredSize(new java.awt.Dimension(64, 64));
        trashButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        fileName.setBackground(new java.awt.Color(102, 102, 102));
        fileName.setFont(new java.awt.Font("Lucida Grande", 0, 32)); // NOI18N
        fileName.setForeground(new java.awt.Color(255, 255, 255));
        fileName.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        fileName.setText("New File");
        fileName.setToolTipText("File Name");
        fileName.setBorder(null);
        fileName.setCaretColor(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout buttonMenuPanelLayout = new javax.swing.GroupLayout(buttonMenuPanel);
        buttonMenuPanel.setLayout(buttonMenuPanelLayout);
        buttonMenuPanelLayout.setHorizontalGroup(
            buttonMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonMenuPanelLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(fileName, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(newFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(openFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(undoButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(redoButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(trashButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        buttonMenuPanelLayout.setVerticalGroup(
            buttonMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonMenuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buttonMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(fileName)
                    .addComponent(openFileButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(trashButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(redoButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(undoButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(saveFileButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newFileButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        toolBarPanel.setBackground(new java.awt.Color(204, 204, 204));

        backgroundColorChooserPanel.setBackground(new java.awt.Color(255, 255, 255));
        backgroundColorChooserPanel.setToolTipText("Current Color");
        backgroundColorChooserPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backgroundColorChooserPanelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout backgroundColorChooserPanelLayout = new javax.swing.GroupLayout(backgroundColorChooserPanel);
        backgroundColorChooserPanel.setLayout(backgroundColorChooserPanelLayout);
        backgroundColorChooserPanelLayout.setHorizontalGroup(
            backgroundColorChooserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        backgroundColorChooserPanelLayout.setVerticalGroup(
            backgroundColorChooserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 36, Short.MAX_VALUE)
        );

        foregroundColorChooserPanel.setBackground(new java.awt.Color(0, 0, 0));
        foregroundColorChooserPanel.setToolTipText("Current Color");
        foregroundColorChooserPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                foregroundColorChooserPanelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout foregroundColorChooserPanelLayout = new javax.swing.GroupLayout(foregroundColorChooserPanel);
        foregroundColorChooserPanel.setLayout(foregroundColorChooserPanelLayout);
        foregroundColorChooserPanelLayout.setHorizontalGroup(
            foregroundColorChooserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        foregroundColorChooserPanelLayout.setVerticalGroup(
            foregroundColorChooserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 36, Short.MAX_VALUE)
        );

        colorChooserLabel.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        colorChooserLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        colorChooserLabel.setText("Background");
        colorChooserLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        DrawingToolsButtons.add(moveButton);
        moveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/usu/cs5700/UMLDraw/Graphics/move.png"))); // NOI18N
        moveButton.setSelected(true);
        moveButton.setToolTipText("Select (1)");
        moveButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                moveButtonFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                moveButtonFocusLost(evt);
            }
        });
        moveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveButtonActionPerformed(evt);
            }
        });
        moveButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                moveButtonKeyTyped(evt);
            }
        });

        DrawingToolsButtons.add(associationButton);
        associationButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/usu/cs5700/UMLDraw/Graphics/binary.png"))); // NOI18N
        associationButton.setToolTipText("Binary (2)");
        associationButton.setContentAreaFilled(false);
        associationButton.setName("association"); // NOI18N
        associationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DrawingToolsButtonActionPerformed(evt);
            }
        });

        DrawingToolsButtons.add(dependency);
        dependency.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/usu/cs5700/UMLDraw/Graphics/dependency.png"))); // NOI18N
        dependency.setToolTipText("Dependency (3)");
        dependency.setName("Dependency"); // NOI18N
        dependency.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DrawingToolsButtonActionPerformed(evt);
            }
        });

        DrawingToolsButtons.add(generalization);
        generalization.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/usu/cs5700/UMLDraw/Graphics/generalization.png"))); // NOI18N
        generalization.setToolTipText("Generalization (4)");
        generalization.setName("generalization"); // NOI18N
        generalization.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DrawingToolsButtonActionPerformed(evt);
            }
        });

        DrawingToolsButtons.add(composition);
        composition.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/usu/cs5700/UMLDraw/Graphics/composition.png"))); // NOI18N
        composition.setToolTipText("Composition (6)");
        composition.setName("composition"); // NOI18N
        composition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DrawingToolsButtonActionPerformed(evt);
            }
        });

        DrawingToolsButtons.add(aggregation);
        aggregation.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/usu/cs5700/UMLDraw/Graphics/aggregation.png"))); // NOI18N
        aggregation.setToolTipText("Aggregation (5)");
        aggregation.setName("aggregation"); // NOI18N
        aggregation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DrawingToolsButtonActionPerformed(evt);
            }
        });

        DrawingToolsButtons.add(UMLClass);
        UMLClass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/usu/cs5700/UMLDraw/Graphics/class.png"))); // NOI18N
        UMLClass.setName("class"); // NOI18N
        UMLClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UMLClassActionPerformed(evt);
            }
        });

        colorChooserLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        colorChooserLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        colorChooserLabel1.setText("Foreground");
        colorChooserLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout toolBarPanelLayout = new javax.swing.GroupLayout(toolBarPanel);
        toolBarPanel.setLayout(toolBarPanelLayout);
        toolBarPanelLayout.setHorizontalGroup(
            toolBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(toolBarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(toolBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(foregroundColorChooserPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(colorChooserLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(backgroundColorChooserPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(UMLClass, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(associationButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(aggregation, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dependency, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(generalization, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(composition, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(moveButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(colorChooserLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 8, Short.MAX_VALUE))
        );
        toolBarPanelLayout.setVerticalGroup(
            toolBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(toolBarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(moveButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(UMLClass)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(associationButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dependency)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(generalization)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(composition)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(aggregation)
                .addGap(18, 18, 18)
                .addComponent(colorChooserLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backgroundColorChooserPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(colorChooserLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(foregroundColorChooserPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        drawingPanel.setBackground(new java.awt.Color(255, 255, 255));
        drawingPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                drawingPanelMouseDragged(evt);
            }
        });
        drawingPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                drawingPanelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                drawingPanelMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(toolBarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(drawingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(buttonMenuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(buttonMenuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(toolBarPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(drawingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    private void newFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newFileButtonActionPerformed
        CommandFactory.getInstance().CreateAndDo("new");
    }//GEN-LAST:event_newFileButtonActionPerformed

    private void backgroundColorChooserPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backgroundColorChooserPanelMouseClicked
        JColorChooser obj = new JColorChooser();
        Object a = obj;
        int backgroundColorValue = JOptionPane.showConfirmDialog(null, a, "New Color", JOptionPane.OK_CANCEL_OPTION);
        if (backgroundColorValue == 0) {
            backgroundColorChooserPanel.setBackground(obj.getColor());
            drawingPanel.getDrawing().setBackgroundColor(obj.getColor());
            //backgroundColor = obj.getColor();
        }
    }//GEN-LAST:event_backgroundColorChooserPanelMouseClicked

    private void moveButtonKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_moveButtonKeyTyped
        JToggleButton btn = (JToggleButton) evt.getSource();
        
        if(btn != null && btn.isSelected()) {
            drawingPanel.setMode(Canvas.PossibleModes.Selection);
            selectedShape = null;
        } else {
            CommandFactory.getInstance().CreateAndDo("deselect");
        }
    }//GEN-LAST:event_moveButtonKeyTyped
    
    private void openFile(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFile
            JFileChooser openFile = new JFileChooser();
            openFile.setFileFilter(new FileNameExtensionFilter("JSON File", "json"));
            openFile.showOpenDialog(null);
            File file = openFile.getSelectedFile();
            String path = file.getAbsolutePath();
            
            if (openFile.isValid())
            {
                CommandFactory.getInstance().CreateAndDo("load", path);
            }
            
    }//GEN-LAST:event_openFile

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

    }//GEN-LAST:event_formWindowOpened

    private void foregroundColorChooserPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foregroundColorChooserPanelMouseClicked
        JColorChooser obj = new JColorChooser();
        Object a = obj;
        int backgroundColorValue = JOptionPane.showConfirmDialog(null, a, "New Color", JOptionPane.OK_CANCEL_OPTION);
        if (backgroundColorValue == 0) {
            backgroundColorChooserPanel.setBackground(obj.getColor());
            foregroundColor = obj.getColor();
        }
    }//GEN-LAST:event_foregroundColorChooserPanelMouseClicked

    private void saveFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveFileButtonActionPerformed
        JFileChooser saveFileChooser = new JFileChooser();
        saveFileChooser.addChoosableFileFilter(new FileNameExtensionFilter("JSON", "json"));
        saveFileChooser.setSelectedFile(new File(fileName.getText() + ".json"));
        saveFileChooser.showSaveDialog(this);
        File file = saveFileChooser.getSelectedFile();
        //String path = file.getAbsolutePath();

        if (saveFileChooser.isValid())
        {
            CommandFactory.getInstance().CreateAndDo("load", file);
        }
    }//GEN-LAST:event_saveFileButtonActionPerformed

    private void undoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undoButtonActionPerformed
        invoker.Undo();
    }//GEN-LAST:event_undoButtonActionPerformed

    private void redoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redoButtonActionPerformed
        invoker.Redo();
    }//GEN-LAST:event_redoButtonActionPerformed

    private void moveButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_moveButtonFocusGained
        drawingPanel.setMode(Canvas.PossibleModes.Selection);
        selectedShape = null;
    }//GEN-LAST:event_moveButtonFocusGained

    private void moveButtonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_moveButtonFocusLost
        CommandFactory.getInstance().CreateAndDo("deselect");
        drawingPanel.setMode(Canvas.PossibleModes.None);
    }//GEN-LAST:event_moveButtonFocusLost

    private void moveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveButtonActionPerformed
        JToggleButton btn = (JToggleButton)evt.getSource();
        if (btn.isSelected() && btn != null) {
            drawingPanel.setMode(Canvas.PossibleModes.Selection);
            selectedShape = null;
        } else {
            CommandFactory.getInstance().CreateAndDo("deselect");
            drawingPanel.setMode(Canvas.PossibleModes.None);
        }
    }//GEN-LAST:event_moveButtonActionPerformed

    private void UMLClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UMLClassActionPerformed
        JToggleButton btn = (JToggleButton)evt.getSource();

        if (btn.isSelected() && btn != null) {
            selectedShape = btn.getName();
        } else {
            selectedShape = null;
        }
        
        CommandFactory.getInstance().CreateAndDo("deselect");
        if (selectedShape != null) {
            drawingPanel.setMode(Canvas.PossibleModes.UMLClassDrawing);
        } else {
            drawingPanel.setMode(Canvas.PossibleModes.None);
        }
    }//GEN-LAST:event_UMLClassActionPerformed

    private void DrawingToolsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DrawingToolsButtonActionPerformed
        JToggleButton btn = (JToggleButton)evt.getSource();
        if (btn.isSelected()) {
            selectedShape = btn.getName();
        } else {
            selectedShape = null;
        }
        
        CommandFactory.getInstance().CreateAndDo("deselect");
        if (selectedShape != null) {
            drawingPanel.setMode(Canvas.PossibleModes.UMLRelationshipDrawing);
        } else {
            drawingPanel.setMode(Canvas.PossibleModes.None);
        }
    }//GEN-LAST:event_DrawingToolsButtonActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        if (invoker != null) {
            invoker.Stop();
        }
    }//GEN-LAST:event_formWindowClosed

    private void drawingPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drawingPanelMousePressed
        drawingPanel.setStartPoint(evt.getPoint());
        CommandFactory.getInstance().CreateAndDo(selectedShape);
    }//GEN-LAST:event_drawingPanelMousePressed

    private void drawingPanelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drawingPanelMouseReleased
        drawingPanel.setEndPoint(evt.getPoint());

        if (drawingPanel.getMode() == Canvas.PossibleModes.UMLRelationshipDrawing) {
            if (selectedShape != null) {
                System.out.println(selectedShape);
                if (selectedShape == "association") {
                    Object className = JOptionPane.showInputDialog("Role Name:");
                    CommandFactory.getInstance().CreateAndDo("AddArrow", selectedShape,
                            drawingPanel.getStartPoint(), drawingPanel.getEndPoint(), className);
                } else {
                    CommandFactory.getInstance().CreateAndDo("AddArrow", selectedShape,
                            drawingPanel.getStartPoint(), drawingPanel.getEndPoint());
                }
            }
        } else if (drawingPanel.getMode() == Canvas.PossibleModes.UMLClassDrawing) {
            if (selectedShape != null) {
                Object className = JOptionPane.showInputDialog("Enter class roleName:");
                CommandFactory.getInstance().CreateAndDo("AddClass", className,
                        drawingPanel.getStartPoint(), drawingPanel.getEndPoint());
            }
        }

        drawingPanel.resetPositions();
    }//GEN-LAST:event_drawingPanelMouseReleased

    private void drawingPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drawingPanelMouseDragged
        drawingPanel.setEndPoint(evt.getPoint());
        drawingPanel.repaint();
    }//GEN-LAST:event_drawingPanelMouseDragged


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the MacOSX look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("MacOSX".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainForm().setVisible(true);
        });
    }

    //<editor-fold defaultstate="collapsed" desc=" Variables declaration ">
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup DrawingToolsButtons;
    private javax.swing.ButtonGroup MenuButtons;
    private javax.swing.JToggleButton UMLClass;
    private javax.swing.JToggleButton aggregation;
    private javax.swing.JToggleButton associationButton;
    private javax.swing.JPanel backgroundColorChooserPanel;
    private javax.swing.JPanel buttonMenuPanel;
    private javax.swing.JLabel colorChooserLabel;
    private javax.swing.JLabel colorChooserLabel1;
    private javax.swing.JToggleButton composition;
    private javax.swing.JToggleButton dependency;
    private Canvas drawingPanel;
    private javax.swing.JTextField fileName;
    private javax.swing.JPanel foregroundColorChooserPanel;
    private javax.swing.JToggleButton generalization;
    private javax.swing.JToggleButton moveButton;
    private javax.swing.JButton newFileButton;
    private javax.swing.JButton openFileButton;
    private javax.swing.JButton redoButton;
    private javax.swing.JButton saveFileButton;
    private javax.swing.JPanel toolBarPanel;
    private javax.swing.JButton trashButton;
    private javax.swing.JButton undoButton;
    // End of variables declaration//GEN-END:variables
    //</editor-fold>
}